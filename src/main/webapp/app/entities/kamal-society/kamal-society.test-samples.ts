import dayjs from 'dayjs/esm';

import { IKamalSociety, NewKamalSociety } from './kamal-society.model';

export const sampleWithRequiredData: IKamalSociety = {
  id: 26087,
  financialYear: 'invoice Agent',
};

export const sampleWithPartialData: IKamalSociety = {
  id: 48441,
  financialYear: 'Glens',
  kmDate: dayjs('2024-02-01T12:27'),
  pacsNumber: 'up Executive',
  pacsName: 'red Cotton',
  sansthaTapasaniDate: dayjs('2024-02-01T01:27'),
  sansthaTapasaniDateMr: 'intermediate black Nigeria',
  bagayat: 'Small Nebraska visionary',
  memLoan: 'Montana',
  memDue: 'Kansas red Ergonomic',
  memVasuli: 'flexibility lavender',
  memVasuliPer: 'Shirt Marketing',
  bankLoan: 'enhance',
  bankVasuli: 'Islands Fish',
  balanceSheetDateMr: 'Plastic',
  liabilitySpareFund: 'Outdoors SCSI',
  liabilityBalanceSheetBankLoan: 'parse',
  assetCash: 'Future',
  assetMemberLoan: 'hub Accountability De-engineered',
  assetLoss: 'Assistant invoice',
  totalLiability: 'Rustic wireless Borders',
  totalAsset: 'Flats',
  branchVerifiedFlag: false,
  headOfficeVerifiedFlag: true,
  isSupplimenteryFlag: true,
  headOfficeVerifiedBy: 'schemas Representative auxiliary',
  headOfficeVerifiedDate: dayjs('2024-01-31T13:18'),
  divisionalOfficeVerifiedBy: 'orchestrate THX',
  divisionalOfficeVerifiedDate: dayjs('2024-01-31T19:51'),
};

export const sampleWithFullData: IKamalSociety = {
  id: 42667,
  financialYear: 'Music',
  kmDate: dayjs('2024-02-01T09:05'),
  kmDateMr: 'Buckinghamshire compressing connect',
  kmFromDate: dayjs('2024-01-31T16:14'),
  kmFromDateMr: 'content extensible',
  kmToDate: dayjs('2024-01-31T16:20'),
  kmToDateMr: 'navigating Loan Georgia',
  pacsNumber: 'reboot Response',
  pacsName: 'online Guilder',
  branchId: 86209,
  branchName: 'primary',
  zindagiPatrakDate: dayjs('2024-02-01T09:23'),
  zindagiPatrakDateMr: 'azure',
  bankTapasaniDate: dayjs('2024-02-01T11:37'),
  bankTapasaniDateMr: 'XML Account Regional',
  govTapasaniDate: dayjs('2024-02-01T02:42'),
  govTapasaniDateMr: 'Designer payment',
  sansthaTapasaniDate: dayjs('2024-01-31T14:45'),
  sansthaTapasaniDateMr: 'Specialist',
  totalLand: 'neural',
  bagayat: 'niches',
  jirayat: 'redundant budgetary',
  totalFarmer: 'workforce',
  memberFarmer: 'mindshare approach',
  nonMemberFarmer: 'Canyon Advanced',
  talebandDate: dayjs('2024-02-01T02:56'),
  memLoan: 'Account emulation Planner',
  memDue: 'Iceland Cheese',
  memVasuli: 'Forward Central',
  memVasuliPer: 'Progressive',
  bankLoan: 'orchestrate Money',
  bankDue: 'Azerbaijanian',
  bankVasuli: 'multi-byte 1080p',
  bankVasuliPer: 'Cambridgeshire',
  balanceSheetDate: dayjs('2024-02-01T03:12'),
  balanceSheetDateMr: 'Moldovan Frozen Fresh',
  liabilityAdhikrutShareCapital: 'Customer Account Ball',
  liabilityVasulShareCapital: 'open-source unleash',
  liabilityFund: 'Bacon Handcrafted',
  liabilitySpareFund: 'Steel',
  liabilityDeposite: 'Manat',
  liabilityBalanceSheetBankLoan: 'RSS',
  liabilityOtherPayable: 'collaborative Centralized',
  liabilityProfit: 'maroon',
  assetCash: 'mobile Principal',
  assetInvestment: 'Bike',
  assetImaratFund: 'open-source web-enabled',
  assetMemberLoan: 'models',
  assetDeadStock: 'Salad',
  assetOtherReceivable: 'Research',
  assetLoss: 'Hong Unbranded Specialist',
  totalLiability: 'copying middleware',
  totalAsset: 'overriding',
  villageCode: 'reboot infomediaries mobile',
  pacsVerifiedFlag: true,
  branchVerifiedFlag: false,
  headOfficeVerifiedFlag: false,
  divisionalOfficeVerifiedFlag: false,
  isSupplimenteryFlag: true,
  sansthaTapasaniVarg: 'Pound',
  branchVerifiedBy: 'Bike open-source',
  branchVerifiedDate: dayjs('2024-02-01T04:38'),
  headOfficeVerifiedBy: 'Cross-platform',
  headOfficeVerifiedDate: dayjs('2024-02-01T11:56'),
  divisionalOfficeVerifiedBy: 'SMTP bleeding-edge',
  divisionalOfficeVerifiedDate: dayjs('2024-02-01T01:03'),
  doshPurtataDate: dayjs('2024-02-01T09:40'),
  gambhirDosh: 'Concrete',
};

export const sampleWithNewData: NewKamalSociety = {
  financialYear: 'extend',
  id: null,
};

Object.freeze(sampleWithNewData);
Object.freeze(sampleWithRequiredData);
Object.freeze(sampleWithPartialData);
Object.freeze(sampleWithFullData);
