import dayjs from 'dayjs/esm';

import { IKamalSociety, NewKamalSociety } from './kamal-society.model';

export const sampleWithRequiredData: IKamalSociety = {
  id: 26087,
  financialYear: 'invoice Agent',
};

export const sampleWithPartialData: IKamalSociety = {
  id: 84147,
  financialYear: 'empower',
  kmDate: dayjs('2024-01-31T17:08'),
  pacsNumber: 'Checking Bedfordshire local',
  pacsName: 'up Executive',
  sansthaTapasaniDate: dayjs('2024-01-31T23:50'),
  sansthaTapasaniDateMr: 'Music',
  bagayat: 'Applications intermediate',
  memLoan: 'defect',
  memDue: 'invoice Cotton',
  memVasuli: 'copying bypass',
  memVasuliPer: 'Territory task-force',
  bankLoan: 'green',
  bankVasuli: 'deposit flexibility lavender',
  balanceSheetDateMr: 'Shirt Marketing',
  liabilitySpareFund: 'enhance',
  liabilityBalanceSheetBankLoan: 'Islands Fish',
  assetCash: 'Plastic',
  assetMemberLoan: 'Outdoors SCSI',
  assetLoss: 'parse',
  totalLiability: 'Future',
  totalAsset: 'hub Accountability De-engineered',
  branchVerifiedFlag: false,
  headOfficeVerifiedFlag: true,
};

export const sampleWithFullData: IKamalSociety = {
  id: 82722,
  financialYear: 'invoice',
  kmDate: dayjs('2024-01-31T18:56'),
  kmDateMr: 'Computer',
  kmFromDate: dayjs('2024-02-01T06:54'),
  kmFromDateMr: 'capacitor Personal Flats',
  kmToDate: dayjs('2024-02-01T08:38'),
  kmToDateMr: '1080p wireless',
  pacsNumber: 'indigo redefine orchestrate',
  pacsName: 'Account ROI Rustic',
  branchId: 98888,
  branchName: 'up fault-tolerant',
  zindagiPatrakDate: dayjs('2024-02-01T00:49'),
  zindagiPatrakDateMr: 'generating e-tailers Account',
  bankTapasaniDate: dayjs('2024-01-31T19:09'),
  bankTapasaniDateMr: 'transition connecting indigo',
  govTapasaniDate: dayjs('2024-01-31T18:01'),
  govTapasaniDateMr: 'productize Applications Junction',
  sansthaTapasaniDate: dayjs('2024-02-01T11:17'),
  sansthaTapasaniDateMr: 'SQL Generic Mouse',
  totalLand: 'Refined Account Regional',
  bagayat: 'Loan Handcrafted',
  jirayat: 'Senior',
  totalFarmer: 'Books',
  memberFarmer: 'Savings incentivize redundant',
  nonMemberFarmer: 'Plastic',
  talebandDate: dayjs('2024-02-01T05:13'),
  memLoan: 'interface interface Intelligent',
  memDue: 'Concrete whiteboard',
  memVasuli: 'Product parsing',
  memVasuliPer: 'Ohio Rustic',
  bankLoan: 'Account Chief Engineer',
  bankDue: 'Mills Cheese granular',
  bankVasuli: 'Rubber Soft Afghanistan',
  bankVasuliPer: 'Berkshire Moldovan Frozen',
  balanceSheetDate: dayjs('2024-02-01T11:16'),
  balanceSheetDateMr: 'Chief programming',
  liabilityAdhikrutShareCapital: 'Account Ball Buckinghamshire',
  liabilityVasulShareCapital: 'unleash e-business bypass',
  liabilityFund: 'Music',
  liabilitySpareFund: 'Clothing',
  liabilityDeposite: 'Salad Rufiyaa Integration',
  liabilityBalanceSheetBankLoan: 'eyeballs',
  liabilityOtherPayable: 'maximized Engineer',
  liabilityProfit: 'Club orchid open-source',
  assetCash: 'Pine models',
  assetInvestment: 'Salad',
  assetImaratFund: 'Research',
  assetMemberLoan: 'Hong Unbranded Specialist',
  assetDeadStock: 'copying middleware',
  assetOtherReceivable: 'overriding',
  assetLoss: 'reboot infomediaries mobile',
  totalLiability: 'Cotton Research',
  totalAsset: 'multi-byte',
  villageCode: 'Cheese',
  pacsVerifiedFlag: false,
  branchVerifiedFlag: false,
  headOfficeVerifiedFlag: false,
  isSupplimenteryFlag: false,
};

export const sampleWithNewData: NewKamalSociety = {
  financialYear: 'TCP',
  id: null,
};

Object.freeze(sampleWithNewData);
Object.freeze(sampleWithRequiredData);
Object.freeze(sampleWithPartialData);
Object.freeze(sampleWithFullData);
